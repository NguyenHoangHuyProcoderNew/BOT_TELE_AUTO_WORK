# IMPORT C√ÅC TH∆Ø VI·ªÜN C·∫¶N THI·∫æT
import os
import time
import logging
import threading
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from time import sleep
import telebot
import sys
import pyperclip
from selenium.common.exceptions import NoSuchElementException
logging.basicConfig(level=logging.CRITICAL)  # Ch·ªâ in th√¥ng b√°o l·ªói nghi√™m tr·ªçng
import datetime
now = datetime.datetime.now()
from selenium.common.exceptions import TimeoutException
from colorama import Fore, Style, init
from telebot import types

# ƒê∆∞·ªùng d·∫´n ƒë·∫øn chrome driver
chromedriver_path = r'D:\\BOT_TELE_AUTO_WORK\\BOT LIVE THU CONG\\chrome_driver\\chromedriver.exe'

# C·∫•u h√¨nh chrome driver
options = Options()
options.add_argument('--log-level=3')  # V√¥ hi·ªáu h√≥a th√¥ng b√°o c·ªßa Selenium
options.add_argument('--user-data-dir=D:\\BOT_TELE_AUTO_WORK\\BOT LIVE THU CONG\\du lieu trinh duyet')

service = Service(chromedriver_path)
service_log_path = os.path.devnull
service = Service(chromedriver_path, service_log_path=service_log_path)

# KHAI B√ÅO APT TOKEN BOT TELEGRAM
API_TOKEN = '7329003333:AAF7GhjivbGnk0jSGE8XfefFh_-shHAFsGc'  # TOKEN C·ª¶A BOT
bot = telebot.TeleBot(API_TOKEN)

# C√ÅC CH·ª®C NƒÇNG IN RA M√ÄN H√åNH
from print_logger.print_logger import log_info, log_warning, log_error, log_success

# Nh·∫≠p ch·ª©c nƒÉng bot ph·∫£n h·ªìi l·∫°i ng∆∞·ªùi d√πng
from dylib.dylib import bot_reply

from dylib.dylib import user_id
from dylib.dylib import username

# TH√îNG TIN T√ÄI KHO·∫¢N LIVE
id_tiktok = "nammapsang_keorank"
select_account = "#tiktok_account > option:nth-child(2)"

# Link ngu·ªìn
linknguon = None

# Tr·ªü v·ªÅ menu ch√≠nh
home = telebot.types.ReplyKeyboardMarkup(True).add("ƒê·ªïi IP").add("M·ªü live").add("T·∫Øt live").add("Check view")
def back_home(message):
    text = "VUI L√íNG CH·ªåN üëá"
    bot.send_message(message.chat.id, text, reply_markup=home)

# H√†m y√™u c·∫ßu ng∆∞·ªùi d√πng ch·ªçn ngu·ªìn cho phi√™n live
def ask_source_live_nickphulbh(message):
    # T·∫°o n√∫t ch·ªçn ngu·ªìn cho phi√™n live
    button_select_source_live = types.ReplyKeyboardMarkup(True).add('H·ªíI CHI√äU').add('QU·ª≤NH EM').add('Tr·ªü l·∫°i menu ch√≠nh')
    bot.send_message(message.chat.id, "B·∫°n mu·ªën s·ª≠ d·ª•ng ngu·ªìn live n√†o cho phi√™n live?", reply_markup=button_select_source_live)
    log_info("ƒêang y√™u c·∫ßu ng∆∞·ªùi d√πng ch·ªçn ngu·ªìn cho phi√™n live")
    
    bot.register_next_step_handler(message, main_molive_nickphulbh)

# H√†m th·ª±c hi·ªán vi·ªác m·ªü phi√™n live
def main_molive_nickphulbh(message):
    from dylib.dylib import close_existing_browser # Nh·∫≠p h√†m ƒë√≥ng t·∫•t c·∫£ c√°c phi√™n tr√¨nh duy·ªát chrome ƒëang ch·∫°y
    global linknguon

    # Ki·ªÉm tra xem ng∆∞·ªùi d√πng ch·ªçn ngu·ªìn live n√†o
    if message.text == "H·ªíI CHI√äU":
        linknguon = "https://drive.google.com/file/d/1PrRqUCTGm0nseYKJwARZYuCmsxMc-T7k/view?usp=drivesdk" # NGU·ªíN H·ªíI CHI√äU
        bot_reply(user_id, "Ti·∫øn h√†nh m·ªü phi√™n live v·ªõi ngu·ªìn H·ªíI CHI√äU")
        log_info(f"Ng∆∞·ªùi d√πng {username} ƒë√£ ch·ªçn ngu·ªìn live H·ªíI CHI√äU")
    elif message.text == "QU·ª≤NH EM":
        linknguon = "https://drive.google.com/file/d/1QEX0hXjZZEvY6IjAaBzP7hhuzRop05Gz/view?usp=sharing" # NGU·ªíN QU·ª≤NH EM
        bot_reply(user_id, "Ti·∫øn h√†nh m·ªü phi√™n live v·ªõi ngu·ªìn QU·ª≤NH EM")
        log_info("Ti·∫øn h√†nh m·ªü phi√™n live v·ªõi ngu·ªìn QU·ª≤NH EM")
    elif message.text == "Tr·ªü l·∫°i menu ch√≠nh":
        log_info(f"Ng∆∞·ªùi d√πng {username} ƒë√£ ch·ªçn Tr·ªü l·∫°i menu ch√≠nh")
        back_home(message)
        return
    else:
        bot_reply(user_id, "L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá")
        back_home(message)
        log_error("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá - tr·ªü v·ªÅ menu ch√≠nh")
        return

    # ƒê√≥ng c√°c phi√™n tr√¨nh duy·ªát c≈©, ƒë·ªÉ kh√¥ng g√¢y xung ƒë·ªôt driver chrome
    bot_reply(user_id, "ƒêang ƒë√≥ng c√°c phi√™n tr√¨nh duy·ªát c≈©")
    log_info("ƒêang ch·∫°y h√†m ki·ªÉm tra c√°c phi√™n tr√¨nh duy·ªát ƒëang ch·∫°y, n·∫øu c√≥ phi√™n tr√¨nh duy·ªát n√†o ƒëang ƒë∆∞·ª£c s·∫Ω ƒë√≥ng tr√¨nh duy·ªát")
    close_existing_browser() # H√†m ki·ªÉm tra v√† ƒë√≥ng c√°c phi√™n tr√¨nh duy·ªát chrome c≈© n·∫øu c√≥

    # Kh·ªüi t·∫°o chrome driver
    driver = webdriver.Chrome(service=service, options=options)
    log_info("Kh·ªüi t·∫°o chrome driver")

    # M·ªü trang web livestream
    bot_reply(user_id, "ƒêang m·ªü trang web livestream")
    log_info("M·ªü trang web livestream")
    driver.get('https://autolive.me/tiktok')

    # Ki·ªÉm tra xem c√≥ load trang web livestream th√†nh c√¥ng hay kh√¥ng
    try:
        bot_reply(user_id, "ƒêang load trang web livestream...")
        log_info("ƒêang load trang web livestream")

        # Ki·ªÉm tra xem trang web ƒë√£ load xong ch∆∞a
        WebDriverWait(driver, 100).until(EC.presence_of_element_located((By.XPATH, '/html/body/div[1]/div[3]/div/div/div[1]/div[1]/div/div[2]/h3/b')))

        bot_reply(user_id, "Load trang web livestream th√†nh c√¥ng")
        log_success("Load trang web livestream th√†nh c√¥ng")
    except TimeoutError:
        bot_reply(user_id, "Load trang web livestream th·∫•t b·∫°i\nNguy√™n nh√¢n: ƒë∆∞·ªùng truy·ªÅn internet qu√° y·∫øu ho·∫∑c trang web s·ª≠ d·ª•ng bƒÉng th√¥ng n∆∞·ªõc ngo√†i d·∫´n ƒë·∫øn l·ªói, ki·ªÉm tra l·∫°i k·∫øt n·ªëi internet c·ªßa m√°y ch·ªß")
        log_error("Load trang web livestream th·∫•t b·∫°i")

        log_info("ƒê√≥ng tr√¨nh duy·ªát chrome")
        driver.quit()

        log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
        return

    log_info("X√≥a c·∫•u h√¨nh c≈©")
    bot_reply(user_id, "Ti·∫øn h√†nh x√≥a c·∫•u h√¨nh c≈©")

    # Ki·ªÉm tra s·ª± ki·ªán x√≥a c·∫•u h√¨nh c≈©
    try:
        log_info("Click v√†o n√∫t x√≥a c·∫•u h√¨nh")
        driver.find_element(By.XPATH, '//button[@class="btn btn-circle btn-dark btn-sm waves-effect waves-light btn-status-live" and @data-status="-1" and @data-toggle="tooltip"]').click()

        log_info("ƒêang ƒë·ª£i th√¥ng b√°o c·ªßa web sau khi x√≥a c·∫•u h√¨nh c≈©...")

        # ƒê·ª£i th√¥ng b√°o sau khi x√≥a c·∫•u h√¨nh c≈© xu·∫•t hi·ªán
        WebDriverWait(driver, 100).until(EC.presence_of_element_located((By.CSS_SELECTOR, "body > div.notifyjs-corner > div > div.notifyjs-container > div")))

        # L·∫•y d·ªØ li·ªáu c·ªßa th√¥ng b√°o x√≥a c·∫•u h√¨nh c≈©
        log_info("Th√¥ng b√°o c·ªßa web sau khi x√≥a c·∫•u h√¨nh c≈© ƒë√£ xu·∫•t hi·ªán, ƒëang l·∫•y d·ªØ li·ªáu c·ªßa th√¥ng b√°o...")
        thongbao_xoacauhinhcu = driver.execute_script('''
        // JavaScript code here
        // ƒêo·∫°n m√£ JavaScript ƒë·ªÉ l·∫•y n·ªôi dung c·ªßa ph·∫ßn t·ª≠
        var element = document.querySelector('div.text[data-notify-html="text"]');
        return element.textContent;
    ''')

        # KI·ªÇM TRA D·ªÆ LI·ªÜU C·ª¶A TH√îNG B√ÅO
        log_info("ƒêang ki·ªÉm tra d·ªØ li·ªáu c·ªßa th√¥ng b√°o")
        if thongbao_xoacauhinhcu == "Success":
            bot_reply(user_id, "X√≥a c·∫•u h√¨nh c≈© th√†nh c√¥ng")
            log_success(f"X√≥a c·∫•u h√¨nh c≈© th√†nh c√¥ng - Th√¥ng b√°o c·ªßa web: {thongbao_xoacauhinhcu}")
        else:
            bot_reply(user_id, f"X√≥a c·∫•u h√¨nh c≈© th·∫•t b·∫°i - Th√¥ng b√°o t·ª´ web: {thongbao_xoacauhinhcu}")
            log_error(f"X√≥a c·∫•u h√¨nh c≈© th·∫•t b·∫°i - Th√¥ng b√°o t·ª´ web: {thongbao_xoacauhinhcu}")

            log_info("ƒê√≥ng tr√¨nh duy·ªát chrome")
            driver.quit()

            log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
            return
    except NoSuchElementException:
        bot_reply(user_id, "Hi·ªán t·∫°i kh√¥ng c√≥ c·∫•u h√¨nh c≈©")
        log_info("Hi·ªán t·∫°i kh√¥ng c√≥ c·∫•u h√¨nh c≈©")

    # T·∫†O C·∫§U H√åNH M·ªöI
    bot_reply(user_id, "Ti·∫øn h√†nh t·∫°o c·∫•u h√¨nh m·ªõi")
    log_info("T·∫°o c·∫•u h√¨nh live m·ªõi")

    # CH·ªåN T√ÄI KHO·∫¢N LIVE
    log_info("ƒêang ch·ªçn t√†i kho·∫£n live")
    driver.find_element(By.CSS_SELECTOR, f"{select_account}").click()

    # NH·∫¨P TI√äU ƒê·ªÄ LIVE
    log_info("ƒêang nh·∫≠p ti√™u ƒë·ªÅ live")
    driver.find_element(By.ID, "title").send_keys('k√©o rank Li√™n Qu√¢n')

    # CH·ªåN CH·ª¶ ƒê·ªÄ LIVE
    log_info("ƒêang ch·ªçn ch·ªß ƒë·ªÅ live")
    driver.find_element(By.CSS_SELECTOR, "#topic > option:nth-child(11)").click()

    # CH·ªåN KI·ªÇU LIVE
    log_info("ƒêang ch·ªçn ki·ªÉu live")
    driver.find_element(By.CSS_SELECTOR, "#formLive > div:nth-child(6) > div > div > div > button:nth-child(2) > i").click()

    # NH·∫¨P LINK NGU·ªíN
    log_info("ƒêang nh·∫≠p link ngu·ªìn cho phi√™n live")
    driver.find_element(By.ID, "url_source").send_keys(linknguon)

    # L∆ØU C·∫§U H√åNH
    bot_reply(user_id, "C·∫•u h√¨nh ho√†n t·∫•t, ti·∫øn h√†nh l∆∞u l·∫°i c·∫•u h√¨nh")
    log_info("C·∫•u h√¨nh ho√†n t·∫•t, ti·∫øn h√†nh l∆∞u l·∫°i c·∫•u h√¨nh")

    # Ki·ªÉm tra xem c·∫•u h√¨nh c√≥ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng hay kh√¥ng
    try:
        driver.find_element(By.CSS_SELECTOR, "#formLive > button").click()
        log_info("Click v√†o n√∫t l∆∞u c·∫•u h√¨nh")

        driver.refresh()
        log_info("L√†m m·ªõi l·∫°i trang web ƒë·ªÉ l∆∞u c·∫•u h√¨nh")

        # Ch·ªù web load sau khi refesh
        WebDriverWait(driver, 100).until(EC.presence_of_element_located((By.XPATH, '/html/body/div[1]/div[3]/div/div/div[1]/div[1]/div/div[1]')))

        bot_reply(user_id, "L∆∞u c·∫•u h√¨nh th√†nh c√¥ng")
        log_info("L√†m m·ªõi trang web ho√†n t·∫•t - c·∫•u h√¨nh ƒë√£ ƒë∆∞·ª£c l∆∞u l·∫°i")
    except TimeoutError:
        bot_reply(user_id, "T·∫°o c·∫•u h√¨nh m·ªõi th·∫•t b·∫°i")
        log_info("T·∫°o c·∫•u h√¨nh m·ªõi th·∫•t b·∫°i")

        driver.quit()
        log_info("ƒê√≥ng tr√¨nh duy·ªát chrome")

        log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
        return

    bot_reply(user_id, "Ti·∫øn h√†nh m·ªü phi√™n live")
    log_info("Ti·∫øn h√†nh m·ªü phi√™n live")

    # Ch·ªù n√∫t m·ªü live xu·∫•t hi·ªán l·∫ßn 1
    bot_reply(user_id, "ƒêang ƒë·ª£i n√∫t m·ªü phi√™n live xu·∫•t hi·ªán")
    log_info("ƒêang ƒë·ª£i n√∫t m·ªü phi√™n live xu·∫•t hi·ªán")
    try:
        WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, "button.btn.btn-circle.btn-dark.btn-sm.waves-effect.waves-light.btn-status-live[data-status='1'][data-toggle='tooltip'][data-placement='top'][data-original-title='B·∫Øt ƒë·∫ßu live']"))
        )
        bot_reply(user_id, "N√∫t m·ªü phi√™n live ƒë√£ xu·∫•t hi·ªán")
        log_success("N√∫t m·ªü live ƒë√£ xu·∫•t hi·ªán")
    except TimeoutException:
        bot_reply(user_id, "N√∫t m·ªü live kh√¥ng xu·∫•t hi·ªán")
        log_error("Kh√¥ng t·ªìn t·∫°i n√∫t m·ªü live")

        bot_reply(user_id, "Ti·∫øn h√†nh ki·ªÉm tra l·∫°i l·∫ßn 2")
        log_info("Ti·∫øn h√†nh ki·ªÉm tra l·∫ßn 2")

        bot_reply(user_id, "L√†m m·ªõi l·∫°i trang web livestream")
        log_info("L√†m m·ªõi l·∫°i trang web livestream")

        driver.refresh()

        # Ki·ªÉm tra xem c√≥ load trang web livestream th√†nh c√¥ng hay kh√¥ng
        try:
            # Ki·ªÉm tra xem trang web ƒë√£ load xong ch∆∞a
            WebDriverWait(driver, 100).until(EC.presence_of_element_located((By.XPATH, '/html/body/div[1]/div[3]/div/div/div[1]/div[1]/div/div[2]/h3/b')))

            bot_reply(user_id, "L√†m m·ªõi l·∫°i trang web livestram th√†nh c√¥ng")
            log_success("L√†m m·ªõi l·∫°i trang web livestream th√†nh c√¥ng")
        except TimeoutError:
            bot_reply(user_id, "Load trang web livestream th·∫•t b·∫°i\nNguy√™n nh√¢n: ƒë∆∞·ªùng truy·ªÅn internet qu√° y·∫øu ho·∫∑c trang web s·ª≠ d·ª•ng bƒÉng th√¥ng n∆∞·ªõc ngo√†i d·∫´n ƒë·∫øn l·ªói, ki·ªÉm tra l·∫°i k·∫øt n·ªëi internet c·ªßa m√°y ch·ªß")
            log_error("Load trang web livestream th·∫•t b·∫°i")

            log_info("ƒê√≥ng tr√¨nh duy·ªát chrome")
            driver.quit()

            log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
            return
        
        bot_reply(user_id, "Ti·∫øn h√†nh h√†nh ki·ªÉm tra s·ª± xu·∫•t hi·ªán c·ªßa n√∫t m·ªü live l·∫ßn 2")

        # Ch·ªù n√∫t m·ªü live xu·∫•t hi·ªán l·∫ßn 2
        log_info("ƒêang ƒë·ª£i n√∫t m·ªü phi√™n live xu·∫•t hi·ªán l·∫ßn 2")
        try:
            WebDriverWait(driver, 10).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, "button.btn.btn-circle.btn-dark.btn-sm.waves-effect.waves-light.btn-status-live[data-status='1'][data-toggle='tooltip'][data-placement='top'][data-original-title='B·∫Øt ƒë·∫ßu live']"))
            )

            bot_reply(user_id, "N√∫t m·ªü phi√™n live ƒë√£ xu·∫•t hi·ªán")
            log_success("N√∫t m·ªü live ƒë√£ xu·∫•t hi·ªán")
        except TimeoutException:
            bot_reply(user_id, "N√∫t m·ªü phi√™n live v·∫´n kh√¥ng xu·∫•t hi·ªán, vui l√≤ng truy c·∫≠p v√†o trang web v√† ki·ªÉm tra l·∫°i")
            log_error("Kh√¥ng t·ªìn t·∫°i n√∫t m·ªü live")
            
            log_info("ƒê√≥ng tr√¨nh duy·ªát chrome")
            driver.quit()

            log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
            return        
    
    bot_reply(user_id, "M·ªü phi√™n live...")
    log_info("M·ªü phi√™n live")
    
    # Ki·ªÉm tra xem c√≥ m·ªü phi√™n live th√†nh c√¥ng hay kh√¥ng
    try:
        log_info("Click v√†o n√∫t m·ªü phi√™n live")
        driver.find_element(By.CSS_SELECTOR, "button.btn.btn-circle.btn-dark.btn-sm.waves-effect.waves-light.btn-status-live[data-status='1'][data-toggle='tooltip'][data-placement='top'][data-original-title='B·∫Øt ƒë·∫ßu live']").click()

        log_info("ƒêang ƒë·ª£i th√¥ng b√°o c·ªßa web sau khi click v√†o n√∫t m·ªü phi√™n live xu·∫•t hi·ªán")
        WebDriverWait(driver, 100).until(EC.presence_of_element_located((By.CSS_SELECTOR, "body > div.notifyjs-corner > div > div.notifyjs-container > div")))

        log_info("ƒêang l·∫•y d·ªØ li·ªáu c·ªßa th√¥ng b√°o c·ªßa web sau khi m·ªü phi√™n live")
        notify_openlive = driver.execute_script('''
        // JavaScript code here
        // ƒêo·∫°n m√£ JavaScript ƒë·ªÉ l·∫•y n·ªôi dung c·ªßa ph·∫ßn t·ª≠
        var element = document.querySelector('div.text[data-notify-html="text"]');
        return element.textContent;
    ''')
        
        if notify_openlive == "Success":
            bot_reply(user_id, "M·ªü phi√™n live th√†nh c√¥ng")
            log_info(f"Th√¥ng b√°o c·ªßa web l√† {notify_openlive} - M·ªü live th√†nh c√¥ng")
        else:
            bot_reply(user_id, f"M·ªü phi√™n live th·∫•t b·∫°i\nTh√¥ng b√°o t·ª´ web: {notify_openlive}")
            log_error(f"M·ªü phi√™n live th·∫•t b·∫°i - Th√¥ng b√°o t·ª´ web: {notify_openlive}")

            driver.quit()
            log_info("ƒê√≥ng tr√¨nh duy·ªát chrome")

            log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
            return
    except TimeoutError:
        bot_reply(user_id, "M·ªü phi√™n live th·∫•t b·∫°i\nNguy√™n nh√¢n: s·ª± c·ªë k·∫øt n·ªëi t·ª´ m√°y ch·ªß")
        log_error("Kh√¥ng th·ªÉ m·ªü phi√™n live - S·ª± c·ªë k·∫øt n·ªëi t·ª´ m√°y ch·ªß")
    
    
    bot_reply(user_id, "Ti·∫øn h√†nh ki·ªÉm tra khi n√†o phi√™n live ƒë∆∞·ª£c m·ªü")
    log_info("Ti·∫øn h√†nh ki·ªÉm tra th·ªùi ƒëi·ªÉm phi√™n live di·ªÖn ra")

    # Ki·ªÉm tra xem c√≥ truy c·∫≠p phi√™n live th√†nh c√¥ng hay kh√¥ng
    try:
        bot_reply(user_id, "ƒêang truy c·∫≠p v√†o phi√™n live")
        log_info("ƒêang m·ªü phi√™n live")
        driver.get(f'https://www.tiktok.com/@{id_tiktok}/live')

        log_info("ƒêang load phi√™n live")
        WebDriverWait(driver, 100).until(EC.presence_of_element_located((By.XPATH, '/html/body/div[1]/main/div[3]/div/div[1]/a')))

        bot_reply(user_id, "Truy c·∫≠p phi√™n live th√†nh c√¥ng, khi n√†o phi√™n live di·ªÖn ra t√¥i s·∫Ω th√¥ng b√°o cho b·∫°n")
    except TimeoutException:
        bot_reply(user_id, "Kh√¥ng th·ªÉ truy c·∫≠p phi√™n live, x·∫£y ra s·ª± c·ªë k·∫øt n·ªëi internet")
        log_info("Kh√¥ng th·ªÉ truy c·∫≠p phi√™n live do k·∫øt n·ªëi internet")

        log_info("ƒê√≥ng tr√¨nh duy·ªát chrome")
        driver.quit()

        log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
        return
    
    # H√ÄM KI·ªÇM TRA PHI√äN LIVE
    while True:
        now = datetime.datetime.now() # Bi·∫øn l·∫•y ng√†y gi·ªù hi·ªán t·∫°i c·ªßa h·ªá th·ªëng
        try:
            log_info("ƒêang check view...")
            checkview = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, '/html/body/div[1]/main/div[4]/div[2]/div/div[1]/div[1]/div[1]/div[1]/div/div/div[2]/div[2]/div/div')))
            
            bot_reply(user_id, f"Check live ho√†n t·∫•t, phi√™n live ƒë√£ ƒë∆∞·ª£c m·ªü v√†o l√∫c {now.strftime('%d/%m/%Y %H:%M:%S')}")
            log_info(f"Phi√™n live ƒë√£ ƒë∆∞·ª£c di·ªÖn ra v√†o l√∫c {now.strftime('%d/%m/%Y %H:%M:%S')}")

            log_info("ƒê√≥ng tr√¨nh duy·ªát chrome")
            driver.quit()

            log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
            return
        except TimeoutException:
            log_info("Phi√™n live ch∆∞a ƒë∆∞·ª£c di·ªÖn ra")

            log_info("L√†m m·ªõi l·∫°i phi√™n live")
            driver.refresh()

            # Ki·ªÉm tra xem c√≥ l√†m m·ªõi l·∫°i phi√™n live th√†nh c√¥ng hay kh√¥ng
            try:
                WebDriverWait(driver, 100).until(
                    EC.presence_of_element_located((By.XPATH, "/html/body/div[1]/main/div[3]/div/div[1]/a"))
                )
            except TimeoutException:
                bot_reply(user_id, "Ki·ªÉm tra phi√™n live th·∫•t b·∫°i do c√≥ s·ª± c·ªë k·∫øt n·ªëi internet, vui l√≤ng ki·ªÉm tra l·∫°i ƒë∆∞·ªùng truy·ªÅn")
                log_error("Ki·ªÉm tra phi√™n live th·∫•t b·∫°i do c√≥ s·ª± c·ªë v·ªÅ k·∫øt n·ªëi internet")

                log_info("ƒê√≥ng tr√¨nh duy·ªát chrome")
                driver.quit()

                log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
                return