# IMPORT C√ÅC TH∆Ø VI·ªÜN C·∫¶N THI·∫æT
import os
import time
import logging
import threading
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from time import sleep
import telebot
import sys
import pyperclip
from selenium.common.exceptions import NoSuchElementException
logging.basicConfig(level=logging.CRITICAL)  # Ch·ªâ in th√¥ng b√°o l·ªói nghi√™m tr·ªçng
import datetime
now = datetime.datetime.now()
from selenium.common.exceptions import TimeoutException
from colorama import Fore, Style, init
from telebot import types

# ƒê∆∞·ªùng d·∫´n ƒë·∫øn chrome driver
chromedriver_path = r'D:\\BOT_TELE_AUTO_WORK\\BOT LIVE THU CONG\\chrome_driver\\chromedriver.exe'

# C·∫•u h√¨nh chrome driver
options = Options()
options.add_argument('--log-level=3')  # V√¥ hi·ªáu h√≥a th√¥ng b√°o c·ªßa Selenium
options.add_argument('--user-data-dir=D:\\BOT_TELE_AUTO_WORK\\BOT LIVE THU CONG\\du lieu trinh duyet')

service = Service(chromedriver_path)
service_log_path = os.path.devnull
service = Service(chromedriver_path, service_log_path=service_log_path)

# KHAI B√ÅO APT TOKEN BOT TELEGRAM
API_TOKEN = '7329003333:AAF7GhjivbGnk0jSGE8XfefFh_-shHAFsGc'  # TOKEN C·ª¶A BOT
bot = telebot.TeleBot(API_TOKEN)

# C√ÅC CH·ª®C NƒÇNG IN RA M√ÄN H√åNH
from print_logger.print_logger import log_info, log_warning, log_error, log_success

# Nh·∫≠p ch·ª©c nƒÉng bot ph·∫£n h·ªìi l·∫°i ng∆∞·ªùi d√πng
from dylib.dylib import bot_reply

from dylib.dylib import user_id
from dylib.dylib import username

id_tiktok = None

############################ CH·ª®C NƒÇNG CH√çNH ##########################

home = telebot.types.ReplyKeyboardMarkup(True).add("ƒê·ªïi IP").add("M·ªü live").add("T·∫Øt live").add("Check view")
def back_home(message):
    text = "VUI L√íNG CH·ªåN üëá"
    bot.send_message(message.chat.id, text, reply_markup=home)
    
def ask_select_account_checkview(message):
    log_info("Bot ƒëang y√™u c·∫ßu ng∆∞·ªùi d√πng ch·ªçn t√†i kho·∫£n c·∫ßn check view")
    button_select_account_checkview = telebot.types.ReplyKeyboardMarkup(True).add("Nick VƒÉn B·∫£o").add("Nick Ph·ª• LBH").add("Nick MEME L·ªè").add("Tr·ªü l·∫°i menu ch√≠nh")
    bot.send_message(message.chat.id, "Vui l√≤ng ch·ªçn t√†i kho·∫£n c·∫ßn check view", reply_markup=button_select_account_checkview)

    bot.register_next_step_handler(message, checkview_main)

def checkview_main(message):
    global id_tiktok

    if message.text == "Nick VƒÉn B·∫£o":
        id_tiktok = "vanbao165201"
        bot_reply(user_id, "Ti·∫øn h√†nh check view cho Nick VƒÉn B·∫£o")
        log_info("Ng∆∞·ªùi d√πng ƒë√£ ch·ªçn t√†i kho·∫£n VƒÉn B·∫£o")
    elif message.text == "Nick Ph·ª• LBH":
        id_tiktok = "nammapsang_keorank"
        bot_reply(user_id, "Ti·∫øn h√†nh check view cho Nick Ph·ª• LBH")
        log_info("Ng∆∞·ªùi d√πng ƒë√£ ch·ªçn Nick Ph·ª• LBH")
    elif message.text == "Nick MEME L·ªè":
        id_tiktok = "meme.l810"
        bot_reply(user_id, "Ti·∫øn h√†nh check view cho Nick Meme L·ªè")
    elif message.text == "Tr·ªü l·∫°i menu ch√≠nh":
        log_info("Ng∆∞·ªùi d√πng ƒë√£ ch·ªçn Tr·ªü L·∫°i Menu Ch√≠nh")
        back_home(message)
        return

    log_info("Kh·ªüi t·∫°o chrome driver")
    driver = webdriver.Chrome(service=service, options=options)
    
    bot_reply(user_id, "Ti·∫øn h√†nh truy c·∫≠p v√†o phi√™n live")
    log_info("M·ªü phi√™n livestream")
    driver.get(f'https://www.tiktok.com/@{id_tiktok}/live')

    try:
        log_info("ƒêang load phi√™n live...")

        WebDriverWait(driver, 100).until(
            EC.presence_of_element_located((By.XPATH, "/html/body/div[1]/main/div[3]/div/div[1]/a"))
        )

        bot_reply(user_id, "Truy c·∫≠p phi√™n live th√†nh c√¥ng")
        log_info("Load phi√™n live th√†nh c√¥ng")
    except TimeoutException:
        bot_reply(user_id, "Truy c·∫≠p phi√™n livestream th·∫•t b·∫°i\nNguy√™n nh√¢n: ƒë∆∞·ªùng truy·ªÅn internet qu√° y·∫øu ho·∫∑c trang web s·ª≠ d·ª•ng bƒÉng th√¥ng n∆∞·ªõc ngo√†i d·∫´n ƒë·∫øn l·ªói, ki·ªÉm tra l·∫°i k·∫øt n·ªëi internet c·ªßa m√°y ch·ªß")
        log_error("Load trang web livestream th·∫•t b·∫°i")

        log_info("ƒê√≥ng tr√¨nh duy·ªát chrome")
        driver.quit()

        log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
        return
    
    bot_reply(user_id, "Ti·∫øn h√†nh check view...")
    log_info("ƒêang check view...")

    try:
        log_info("ƒêang ƒë·ª£i ph·∫ßn t·ª≠ ch·ª©a s·ªë l∆∞·ª£ng ng∆∞·ªùi xem xu·∫•t hi·ªán")
        # ƒê·ª£i ph·∫ßn t·ª≠ ch·ª©a s·ªë l∆∞·ª£ng ng∆∞·ªùi xem xu·∫•t hi·ªán v√† ki·ªÉm tra d·ªØ li·ªáu c·ªßa ph·∫ßn t·ª≠
        WebDriverWait(driver, 3).until(EC.presence_of_element_located((By.XPATH, '/html/body/div[1]/main/div[4]/div[2]/div/div[1]/div[1]/div[1]/div[1]/div/div/div[2]/div[2]/div/div')))

        log_info("Ph·∫ßn t·ª≠ ƒë√£ xu·∫•t hi·ªán, ti·∫øn h√†nh check view")

        checkview = driver.find_element(By.XPATH, "/html/body/div[1]/main/div[4]/div[2]/div/div[1]/div[1]/div[1]/div[1]/div/div/div[2]/div[2]/div/div")
        # Chuy·ªÉn d·ªØ li·ªáu c·ªßa ph·∫ßn t·ª≠ ch·ª©a s·ªë l∆∞·ª£ng ng∆∞·ªùi xem th√†nh vƒÉn b·∫£n
        view = checkview.text

        log_success("Check view th√†nh c√¥ng")
        if int(view) >= 0:
            log_info("G·ª≠i d·ªØ li·ªáu cho ng∆∞·ªùi d√πng")
            bot_reply(user_id, f"{now.strftime('%d/%m/%Y %H:%M:%S')} - Phi√™n live hi·ªán t·∫°i ƒëang c√≥ {view} ng∆∞·ªùi xem")
    except TimeoutException:
        bot_reply(user_id, "Phi√™n live n√†y hi·ªán t·∫°i kh√¥ng ƒë∆∞·ª£c m·ªü")
        log_error("Ph·∫ßn t·ª≠ ch·ª©a s·ªë l∆∞·ª£ng ng∆∞·ªùi xem kh√¥ng xu·∫•t hi·ªán, phi√™n live ch∆∞a ƒë∆∞·ª£c m·ªü")
    finally:
        log_info("ƒê√≥ng tr√¨nh duy·ªát chrome")
        driver.quit()
        log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")